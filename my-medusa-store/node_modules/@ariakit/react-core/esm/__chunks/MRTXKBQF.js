"use client";
import {
  useMenuContext
} from "./B2J376ND.js";
import {
  useMenubarContext
} from "./62UHHO2X.js";
import {
  useComboboxProviderContext
} from "./VEVQD5MH.js";
import {
  useCompositeStoreProps
} from "./4CMBR7SL.js";
import {
  useHovercardStoreProps
} from "./FTXTWCCT.js";
import {
  useStore,
  useStoreProps
} from "./YV4JVR4I.js";
import {
  useUpdateEffect
} from "./ABQUS43J.js";
import {
  __spreadProps,
  __spreadValues
} from "./3YLGPPWQ.js";

// src/menu/menu-store.ts
import * as Core from "@ariakit/core/menu/menu-store";
function useMenuStoreProps(store, update, props) {
  useUpdateEffect(update, [props.combobox, props.parent, props.menubar]);
  useStoreProps(store, props, "values", "setValues");
  return Object.assign(
    useHovercardStoreProps(
      useCompositeStoreProps(store, update, props),
      update,
      props
    ),
    {
      combobox: props.combobox,
      parent: props.parent,
      menubar: props.menubar
    }
  );
}
function useMenuStore(props = {}) {
  const parent = useMenuContext();
  const menubar = useMenubarContext();
  const combobox = useComboboxProviderContext();
  props = __spreadProps(__spreadValues({}, props), {
    parent: props.parent !== void 0 ? props.parent : parent,
    menubar: props.menubar !== void 0 ? props.menubar : menubar,
    combobox: props.combobox !== void 0 ? props.combobox : combobox
  });
  const [store, update] = useStore(Core.createMenuStore, props);
  return useMenuStoreProps(store, update, props);
}

export {
  useMenuStoreProps,
  useMenuStore
};
